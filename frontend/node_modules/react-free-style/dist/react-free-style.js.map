{"version":3,"file":"react-free-style.js","sourceRoot":"","sources":["../src/react-free-style.ts"],"names":[],"mappings":"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","sourcesContent":["import React = require('react')\nimport PropTypes = require('prop-types')\nimport * as FreeStyle from 'free-style'\nimport { create } from 'free-style'\n\n/**\n * Re-export the `free-style` module.\n */\nexport { FreeStyle, create }\n\n/**\n * Tag the element for rendering later.\n */\nconst STYLE_ATTRIBUTE = 'data-react-free-style'\n\n/**\n * Check whether we can render on the server/browser.\n */\nexport const canUseDOM = !!(\n  typeof (window as any) !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n)\n\n/**\n * Create a class for passing down the style context.\n */\nexport class GlobalStyleContext {\n\n  Style = create()\n  prevChangeId = this.Style.changeId\n  element: HTMLStyleElement\n\n  constructor () {\n    if (canUseDOM) {\n      this.element = document.querySelector(`style[${STYLE_ATTRIBUTE}]`) as HTMLStyleElement\n\n      if (!this.element) {\n        this.element = document.createElement('style')\n        this.element.setAttribute('type', 'text/css')\n        this.element.setAttribute(STYLE_ATTRIBUTE, 'true')\n\n        document.head.appendChild(this.element)\n      }\n    }\n  }\n\n  changed () {\n    if (canUseDOM && this.Style.changeId !== this.prevChangeId) {\n      this.prevChangeId = this.Style.changeId\n      this.element.textContent = this.Style.getStyles()\n    }\n  }\n\n}\n\n/**\n * Object used for dynamic styles over the context.\n */\nexport type StyleContext = Pick<\n  FreeStyle.FreeStyle,\n  'registerStyle' | 'registerCss' | 'registerHashRule' | 'registerKeyframes' | 'registerRule'\n> & {\n  Style: FreeStyle.FreeStyle\n  mount (): void\n  unmount (): void\n}\n\n/**\n * Create the context object for style components.\n */\nexport function createStyleContext (global: GlobalStyleContext): StyleContext {\n  const Style = create()\n\n  function mount () {\n    global.Style.merge(Style)\n    global.changed()\n  }\n\n  function unmount () {\n    global.Style.unmerge(Style)\n    global.changed()\n  }\n\n  function wrap <T> (invoke: () => T): T {\n    unmount()\n    const result = invoke()\n    mount()\n    return result\n  }\n\n  return {\n    registerStyle (styles: FreeStyle.Styles, displayName?: string) {\n      return wrap(() => Style.registerStyle(styles, displayName))\n    },\n    registerCss (css: FreeStyle.Styles) {\n      return wrap(() => Style.registerCss(css))\n    },\n    registerHashRule (prefix: string, styles: FreeStyle.Styles, displayName?: string) {\n      return wrap(() => Style.registerHashRule(prefix, styles, displayName))\n    },\n    registerKeyframes (keyframes: FreeStyle.Styles, displayName?: string) {\n      return wrap(() => Style.registerKeyframes(keyframes, displayName))\n    },\n    registerRule (rule: string, styles: FreeStyle.Styles) {\n      return wrap(() => Style.registerRule(rule, styles))\n    },\n    Style: Style,\n    mount: mount,\n    unmount: unmount\n  }\n}\n\n/**\n * Create a global style container.\n */\nlet global = new GlobalStyleContext()\n\n/**\n * Get the current render styles.\n */\nexport function rewind () {\n  if (canUseDOM) {\n    throw new TypeError('You must call `rewind()` on the server. Call `peek()` to read the current styles.')\n  }\n\n  const styles = peek()\n  global = new GlobalStyleContext()\n  return styles\n}\n\n/**\n * The interface for \"peeking\" results.\n */\nexport class Peek {\n  constructor (public css: string) {}\n\n  toComponent () {\n    return React.createElement('style', {\n      [STYLE_ATTRIBUTE]: true,\n      dangerouslySetInnerHTML: { __html: this.css }\n    })\n  }\n\n  toString () {\n    return `<style ${STYLE_ATTRIBUTE}=\"true\">${this.css}</style>`\n  }\n\n  toCss () {\n    return this.css\n  }\n}\n\n/**\n * Peek at the current styles without clearing.\n */\nexport function peek (): Peek {\n  return new Peek(global.Style.getStyles())\n}\n\n/**\n * The free-style context object for React.\n */\nexport const ReactFreeStyleContext = {\n  freeStyle: PropTypes.object.isRequired\n}\n\n/**\n * Context for child components.\n */\nexport interface ReactFreeStyleContext {\n  freeStyle: StyleContext\n}\n\nexport interface StyleComponentProps {\n  Style: FreeStyle.FreeStyle\n}\n\n/**\n * Create a style component.\n */\nexport class StyleComponent extends React.Component<StyleComponentProps, {}> {\n\n  static displayName = 'Style'\n  static childContextTypes = ReactFreeStyleContext\n\n  _freeStyle = createStyleContext(global)\n\n  getChildContext (): ReactFreeStyleContext {\n    return {\n      freeStyle: this._freeStyle\n    }\n  }\n\n  componentWillUpdate (nextProps: StyleComponentProps) {\n    if (this.props.Style.id === nextProps.Style.id) return\n\n    this._freeStyle.unmount()\n    this._freeStyle.Style.unmerge(this.props.Style)\n    this._freeStyle.Style.merge(nextProps.Style)\n    this._freeStyle.mount()\n  }\n\n  componentWillMount () {\n    this._freeStyle.Style.merge(this.props.Style)\n    this._freeStyle.mount()\n  }\n\n  componentWillUnmount () {\n    this._freeStyle.Style.unmerge(this.props.Style)\n    this._freeStyle.unmount()\n  }\n\n  render () {\n    return React.Children.only(this.props.children)\n  }\n\n}\n\n/**\n * Wrap a component instead of adding it to the markup manually.\n */\nexport function wrap <P> (\n  Component: React.ComponentType<P>,\n  Style: FreeStyle.FreeStyle = create(),\n  name = 'anonymous'\n) {\n  const Wrapped: React.StatelessComponent<P> = (props: P) => {\n    return React.createElement(StyleComponent, { Style }, React.createElement(Component as any, props))\n  }\n\n  Wrapped.displayName = `Wrap<${Component.displayName || Component.name || name}>`\n\n  return Wrapped\n}\n\n/**\n * Input object for style HOC.\n */\nexport type StyleSheet <T extends string> = {\n  [K in T]: FreeStyle.Styles\n}\n\n/**\n * Styles as a component prop.\n */\nexport type StyleMap <T extends string> = {\n  [K in T]: string\n}\n\n/**\n * Utility for registering a map of styles.\n */\nexport function registerStyleSheet <T extends string> (Style: FreeStyle.FreeStyle, styleSheet: StyleSheet<T>): StyleMap<T> {\n  const styles: StyleMap<T> = Object.create(null)\n\n  for (const key of Object.keys(styleSheet)) {\n    styles[key] = Style.registerStyle(styleSheet[key], key)\n  }\n\n  return styles\n}\n\n/**\n * Props passed to the HOC child.\n */\nexport type StyledProps <T extends string> = {\n  styles: StyleMap<T>\n}\n\n/**\n * Create a HOC for styles.\n */\nexport function styled <T extends string> (styleSheet: StyleSheet<T> = {} as StyleSheet<T>, hash?: FreeStyle.HashFunction, debug?: boolean) {\n  const Style = create(hash, debug)\n  const styles = registerStyleSheet(Style, styleSheet)\n\n  return Object.assign(<P> (Component: React.ComponentType<P & StyledProps<T>>) => {\n    const Styled: React.StatelessComponent<P> = (props: P) => {\n      return React.createElement(\n        StyleComponent,\n        { Style },\n        React.createElement(\n          Component as any,\n          Object.assign({}, props, { styles })\n        )\n      )\n    }\n\n    Styled.displayName = `Styled<${Component.displayName || Component.name || 'anonymous'}>`\n\n    return Styled\n  }, { Style, styles })\n}\n"]}
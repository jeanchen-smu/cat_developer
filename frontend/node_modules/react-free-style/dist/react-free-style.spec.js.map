{"version":3,"file":"react-free-style.spec.js","sourceRoot":"","sources":["../src/react-free-style.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["/* global describe, it, beforeEach */\n\nimport { expect } from 'chai'\nimport * as React from 'react'\nimport PropTypes = require('prop-types')\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { create, StyleComponent, wrap, rewind, FreeStyle, ReactFreeStyleContext, styled } from './react-free-style'\n\ndescribe('react free style', function () {\n  let TestStyle: FreeStyle.FreeStyle\n\n  beforeEach(function () {\n    TestStyle = create()\n  })\n\n  it('should render the main example', function () {\n    const textStyle = TestStyle.registerStyle({\n      backgroundColor: 'red'\n    })\n\n    class Component extends React.Component<{}, {}> {\n\n      render () {\n        return React.createElement(\n          StyleComponent,\n          { Style: TestStyle },\n          React.createElement(\n            'div',\n            { className: textStyle },\n            'Hello world!'\n          )\n        )\n      }\n\n    }\n\n    const App = wrap(Component, TestStyle)\n\n    expect(renderToStaticMarkup(React.createElement(App))).to.equal(\n      `<div class=\"${textStyle}\">Hello world!</div>`\n    )\n\n    expect(rewind().toString()).to.equal(\n      `<style data-react-free-style=\"true\">.${textStyle}{background-color:red}</style>`\n    )\n  })\n\n  it('should render the example dynamic styles', function () {\n    let inlineStyle = ''\n\n    const buttonStyle = TestStyle.registerStyle({\n      backgroundColor: 'red',\n      padding: 10\n    })\n\n    class ButtonComponent extends React.Component<{ style: any }, {}> {\n\n      static contextTypes = {\n        freeStyle: PropTypes.object.isRequired\n      }\n\n      inlineStyle: string\n\n      componentWillMount () {\n        const style = (this.context as ReactFreeStyleContext).freeStyle.registerStyle(this.props.style)\n\n        inlineStyle = this.inlineStyle = style\n      }\n\n      render () {\n        return React.createElement<{ className: string }, HTMLButtonElement>(\n          'button',\n          {\n            className: `${this.inlineStyle} ${buttonStyle}`\n          },\n          this.props.children as any\n        )\n      }\n\n    }\n\n    class Component extends React.Component<{}, {}> {\n\n      render () {\n        return React.createElement(\n          'div',\n          {},\n          React.createElement(\n            ButtonComponent,\n            { style: { color: 'blue'} },\n            'Hello world!'\n          )\n        )\n      }\n\n    }\n\n    const App = wrap(Component, TestStyle)\n\n    expect(renderToStaticMarkup(React.createElement(App))).to.equal(\n      '<div>' +\n      '<button class=\"' + inlineStyle + ' ' + buttonStyle + '\">Hello world!</button>' +\n      '</div>'\n    )\n\n    expect(rewind().toString()).to.equal(\n      `<style data-react-free-style=\"true\">.${buttonStyle}{background-color:red;` +\n      `padding:10px}.${inlineStyle}{color:blue}</style>`\n    )\n  })\n\n  it('should work with nested styles', function () {\n    const NestedStyle = create()\n\n    const appStyle = TestStyle.registerStyle({\n      color: 'blue'\n    })\n\n    const buttonStyle = NestedStyle.registerStyle({\n      backgroundColor: 'red'\n    })\n\n    const Button = wrap(\n      class extends React.Component<{}, {}> {\n\n        render () {\n          return React.createElement(\n            'button',\n            { className: buttonStyle },\n            'Hello world!'\n          )\n        }\n\n      },\n      NestedStyle\n    )\n\n    class Child extends React.Component<{}, {}> {\n\n      render () {\n        return React.createElement(\n          'div',\n          {},\n          React.createElement(Button)\n        )\n      }\n\n    }\n\n    const App = wrap(\n      class extends React.Component<{}, {}> {\n\n        render () {\n          return React.createElement(\n            'div',\n            { className: appStyle },\n            React.createElement(Child)\n          )\n        }\n\n      },\n      TestStyle\n    )\n\n    expect(renderToStaticMarkup(React.createElement(App))).to.equal(\n      '<div class=\"' + appStyle + '\">' +\n      '<div>' +\n      '<button class=\"' + buttonStyle + '\">Hello world!</button>' +\n      '</div>' +\n      '</div>'\n    )\n\n    expect(rewind().toString()).to.equal(\n      `<style data-react-free-style=\"true\">.${appStyle}{color:blue}.${buttonStyle}{background-color:red}</style>`\n    )\n  })\n\n  it('should work with stateless components', function () {\n    let inlineStyle = ''\n\n    const appStyle = TestStyle.registerStyle({\n      background: 'red'\n    })\n\n    const ChildComponent: React.StatelessComponent<{}> = (props: {}, context: ReactFreeStyleContext) => {\n      inlineStyle = context.freeStyle.registerStyle({ color: 'blue' })\n\n      return <span className={inlineStyle}>hello world</span>\n    }\n\n    ChildComponent.contextTypes = {\n      freeStyle: PropTypes.object.isRequired\n    }\n\n    const Child = wrap(ChildComponent)\n\n    const App = wrap(\n      () => <div className={appStyle}><Child /></div>,\n      TestStyle\n    )\n\n    expect(renderToStaticMarkup(React.createElement(App))).to.equal(\n      '<div class=\"' + appStyle + '\">' +\n      '<span class=\"' + inlineStyle + '\">hello world</span>' +\n      '</div>'\n    )\n\n    expect(rewind().toString()).to.equal(\n      `<style data-react-free-style=\"true\">.${appStyle}{background:red}.${inlineStyle}{color:blue}</style>`\n    )\n  })\n\n  it('should work as a hoc', () => {\n    const withStyle = styled({\n      button: {\n        color: 'red'\n      }\n    })\n\n    const Component = withStyle(Object.assign((props: any, context: any) => {\n      context.freeStyle.registerCss({ body: { color: 'blue' } })\n\n      return <div className={props.styles.button}>Test</div>\n    }, { contextTypes: ReactFreeStyleContext }))\n\n    expect(renderToStaticMarkup(React.createElement(Component))).to.equal(\n      '<div class=\"' + withStyle.styles.button + '\">Test</div>'\n    )\n\n    expect(rewind().toString()).to.equal(\n      `<style data-react-free-style=\"true\">.${withStyle.styles.button}{color:red}body{color:blue}</style>`\n    )\n  })\n})\n"]}
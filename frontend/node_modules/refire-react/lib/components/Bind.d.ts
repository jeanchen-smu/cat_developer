/// <reference types="react" />
import * as PropTypes from "prop-types";
import * as React from "react";
import { Component } from "react";
import { syncFirebaseAPI } from "refire";
export interface BindContext {
    syncFirebase: syncFirebaseAPI;
}
export interface BindProps {
    array: boolean;
    as?: string;
    name?: string;
    populateWith?: string;
    populate?: string;
    path?: string;
    from?: string;
    query?: string;
}
export declare class Bind extends Component<BindProps, {}> {
    static contextTypes: {
        syncFirebase: PropTypes.Validator<any>;
    };
    context: BindContext;
    componentDidMount(): void;
    componenWillUnmount(): void;
    componentWillReceiveProps(nextProps: BindProps, nextContext: BindContext): void;
    render(): React.ReactElement<any>;
}
export default Bind;
